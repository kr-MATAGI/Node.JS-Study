JWT (JSON Web Token)
- 수 많은 프로그래밍 언어에서 지원된다.
- 자가 수용적(sel-contained) 이다.
	: JWT는 필요한 모든 정보를 자체적으로 지니고 있따.
	JWT 시스템에서 발급된 토큰은 토큰에 대한 기본정보, 전달할 정보(로그인 시스템에서는 유저정보)
	그리고 토큰이 검증되었다는 것을 증명해주는 signature를 포함하고 있다.
- 쉽게 전달 될 수 있다.
	: JWT는 자가 수용적이므로 두 개체 사이에서 쉽게 전달될 수 있다.
	웹 서버의 경우 HTTP의 헤더에 넣어서 전달할 수 있고 URL의 파라미터로 전달할 수 있다.
	
	
JWT는 어떤 상황에서 사용될까?
- 회원인증
	1) 유저 로그인
	2) 서버는 유저의 정보에 기반한 토큰을 발급하여 유저에게 전달.
	3) 유저가 서버에 요청을 할 때마다 JWT를 포함하여 전달.
	4) 서버가 클라이언트에게서 요청받을 때마다 해당 토큰이 유효하고 인증됐는지 검증
	    및 유저가 요청한 작업에 권한이 있는지 확인하여 처리
	* 서버측에서는 유저의 세션을 유지할 필요 없음.
	  유저가 로그인되어있는지 안되어있는지 신경쓸 필요 없고, 유저가 요청을 했을 때 토큰만 확인.
	  -> 서버의 자원을 아낄 수 있다.

2) 정보 교류
	: JWT는 두 개체 사이에서 안정성 있게 정보를 교환하기에 좋은 방법.
	그 이유는 정보가 sign이 되어 있기 때문에 정보를 보낸이가 바뀌진 않았는지,
	정보가 도중에 조작되었는지 확인 가능.
	

JWT의 생김새
- JWT는 '.'를 구분자로 3가지의 문자열로 되어있다.
			aaaaaaaaaaa . bbbbbbbbbbbb . ccccccccc	  
			헤더(header)	  내용(payload)	서명(signature)
* JWT 토큰을 만들 때는 JWT를 담당하는 라이브러리가 자동으로 인코딩 및 해싱 작업을 해줌.

- Header
	: Header는 2 가지의 정보를 지니고 있다.
	1) typ : 토큰의 타입을 지정 -> JWT
	2) alg : 해싱 알고리즘을 지정. 보통 HMAC SHA256 혹은 RSA
	e.g)
	{
		"typ": "JWT",
		"alg": "HS256"
	}
* JSON 형태의 객체가 base64로 인코딩되는 과정에서 공백 / 엔터들이 사라짐.

- 정보(payload)
	: 토큰에 담을 정보가 들어있다.
	여기에 담는 정보는 한 '조각'을 클레임(claim)이라고 부른다.
	이는 name / value의 한 쌍으로 이루어져 있다.
	토큰에는 여러개의 클레임들을 넣을 수 있다.
	
	클레임의 종류
	1) 등록된(registered) 클레임
		:  서비스에 필요한 정보들이 아닌 토큰에 대한 정보들을 담기위하여 이름이 정해진 클레임
		등록된 클레임의 사용은 모두 선택적이다
			iss: 토큰 발급자 (issuer)
			sub: 토큰 제목 (subject)
			aud: 토큰 대상자 (audience)
			exp: 토큰 만료시간 (expiration), 시간은 NumericDate 형식으로 되어있어야 한다(e.g :1480849147370) 
				언제나 현재 시간보다 이후로 설정되어 있어야 한다.
			nbf: Not Before를 의미하며, 토큰의 활성 날짜와 비슷한 개념.
				여기에도 NumericDate 형식으로 날짜를 지정하며 이 날짜가 지나기 전까지는 토큰이 처리되지 않음
			iat: 토큰이 발급된 시간(Issed at), 이 값을 사용하여 토큰의 age가 얼마나 되었는지 판단 가능
			jti: JWT의 고유 식별자, 주로 중복처리를 방지하기 위하여 사용된다.
				일회용 토큰에 사용하면 유용하다.
	2) 공개(public) 클레임
		: 공개 클레임들은 충돌이 방지된 (collision-resistant) 이름을 가지고 있어야 한다.,
		충돌을 방지하기 위해서는 클레임 이름을 URI 형식으로 지정.
		e.g) 
		{
		    "https://velopert.com/jwt_claims/is_admin": true
		}
		
		*** URL / URI
		- URL (Uniform Resource Lactor)
			> 자원
			> 웹 사이트 주소가 요청하는 파일이라기 보다는 구분자로 보는 것
			> 웹 상에 서비스를 제공하는 각 서버들에 있는 파일의 위치를 표시하기 위한 것.
		- URI (Uniform Resource Identifier)
			> 통합 자원 식별자
			> 인터넷에 있는 자원을 나타내는 유일한 주소
			> URI의 존재는 인터넷에 요구되는 기본 조건으로서, 인터넷 프로토콜이 항상 붙어 있음
			> URI의 하위 개념에 URL, URN이 포함되어 있다.

	3) 비공개(private) 클레임
		: 양 측간 (보통 클라이언트 <-> 서버) 협의 하에 사용되는 클레임 이름들.
		공개클레임과는 달리 중복되어 충돌이 될 수 있으니 사용할 떄 유의
		
	*** base64로 인코딩 할 때 dA== 처럼 뒤에 = 문자가 한두개 붙을 수 있음.
	이 문자는 base64 인코딩의 padding 문자라 한다.
	*** JWT 토큰은 가끔 URL 의 파라미터로 전달 될 때도 있다. 이 = 문자는 url-safe하지 않으므로 제거되어야 한다.
	패딩이 한개 생길 때도, 2개 생길 때도 있는데 전부지워도 디코딩시 문제 되지 않는다.
	

- 서명 (Signature)
	: JWT의 마지막 부분
	헤더의 인코딩 값과 정보의 인코딩 값을 합친 후 주어진 비밀키로 해쉬를 하여 생성.

