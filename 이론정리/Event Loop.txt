1. Event Loop
 - Nodejs 에서는 Event를 매우 많이 사용하고, 이 때문에 다른 비슷한 기술들보다 훨씬 빠른 속도를 자랑한다.
 - Nodejs 기반으로 만들어진 서버가 가동되면, 변수들을 Init하고 함수를 선언, 이벤트가 일어날때까지 기다린다.

 - 이벤트 위주(Event-Driven) 어플리케이션에서는, 이벤트를 대기하는 메인 루프가 있다.
   그리고 이벤트가 감지되었을시 Callback 함수를 호출한다.
		Event Emitter -> Event in Evnet Loop -> Event Handler
		

2. 이벤트와 콜백 함수의 차이점
 - 콜백 함수는 비동기식 함수에서 결과를 반환할 때 호출되지만
   이벤트 핸들링은 옵저버 패턴에 의해 작동된다.
   * 옵저버 패턴 
    - https://ko.wikipedia.org/wiki/%EC%98%B5%EC%84%9C%EB%B2%84_%ED%8C%A8%ED%84%B4
    - 객체의 상태 변화를 관찰하는 관찰자들, 즉 옵저버들의 목록을 객체에 등록하여 상태 변화가 있을 때마다 메서드 등을 통해 객체가 직접 목록의 각 옵저버들에게 통지하도록 하는 디자인 패턴.
	- 주로 분산 이벤트 핸들링 시스템을 구현하는 데 사용된다.
	- 발행/구독 모델로 알려져있다.
 - 이벤트를 대기하는 (Event Listeners) 함수들이 옵저버 역할을 한다.
   옵저버들이 이벤트를 기다리다 이벤트가 실행되면 이벤트를 처리하는 함수가 실행된다.